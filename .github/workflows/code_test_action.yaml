name: code-test-workflow
on:
  push:
    branches:
      - aws_demo 
jobs:
  start-runner:
    name: Start self-hosted EC2 runner for checking test coverage
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.REPO_TOKEN }}
          ec2-image-id: ami-0097b0cba07ae1dca
          ec2-instance-type: t3.xlarge
          subnet-id: subnet-0501494307f30f3bc
          security-group-id: sg-0b69ab6ebf8a1e597
  upload-code-coverage:
    name: Do the job on the runner
    needs: start-runner
    runs-on: ${{ needs.start-runner.outputs.label }}
    env:
      HOME: /home/runner
    steps:
      - name: Hello World
        run: echo 'Hello World! Chirag!'
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.4.22"  # Pin to a specific version of uv

      - name: Set up Python 3.12
        run: uv python install --version 3.12 # Install Python 3.12 with uv

      - name: Install dependencies
        run: |
          UV_INDEX_URL=https://download.pytorch.org/whl/cpu \
          UV_EXTRA_INDEX_URL=https://pypi.org/simple \
          uv sync --all-extras --dev  # Install dependencies with uv

      - name: Run tests with coverage
        run: |
          uv run coverage run -m pytest  || true  # Run tests with coverage
          uv run coverage xml -o coverage.xml  # Generate coverage report in XML format

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4 # Update to the latest version
        with:
          token: ${{ secrets.CODECOV_TOKEN }}  # Use the token from secrets
          files: ./coverage.xml  # Specify the coverage report file
          fail_ci_if_error: true
          slug: ${{ github.repository }}

  build-and-push-docker:
    name: Build and Push Docker Image
    needs: 
      - start-runner
      - upload-code-coverage
    runs-on: ${{ needs.start-runner.outputs.label }}
    steps:
      - name: Install unzip utility
        run: |
          sudo apt-get install -y unzip
      - name: Set up AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"  # Download AWS CLI
          unzip awscliv2.zip  # Unzip the downloaded file
          sudo ./aws/install  # Install AWS CLI
          # Optionally, you can update the AWS CLI if needed
          # sudo ./aws/install --update


      - name: Set up Docker
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh  # Download Docker installation script
          sh get-docker.sh  # Run the installation script
          # sudo systemctl start docker
          # sudo systemctl enable docker

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  # Use your AWS access key
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # Use your AWS secret key
          aws-region: us-east-1  # Specify your AWS region

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 575108919357.dkr.ecr.us-east-1.amazonaws.com

      - name: Build Docker image
        run: |
          df -h
          export DOCKER_BUILDKIT=1
          docker system prune -a -f
          docker build -t cr/emlo-docker-plt:latest .  # Adjust the path to your Dockerfile if necessary

      - name: Tag Docker image
        run: |
          docker tag cr/emlo-docker-plt:latest 575108919357.dkr.ecr.us-east-1.amazonaws.com/cr/emlo-docker-plt:latest

      - name: Push Docker image to ECR
        run: |
          docker push 575108919357.dkr.ecr.us-east-1.amazonaws.com/cr/emlo-docker-plt:latest

  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - start-runner # required to get output from the start-runner job
      - upload-code-coverage # required to wait when the main job is done
      - build-and-push-docker
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.REPO_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}